public class Demo1 extends Thread{
	private static int i = 20;
	
	@Override
	public void run() {
		while(true) {
			if(i<=0) {
				break;
			}
			System.out.println(Thread.currentThread()+"第"+(i--));
			
			
		}
		
	}
	
  
public static void main(String[] args) {
		Demo1 t1 = new Demo1();
		new Thread(t1,"第一位").start();
		
		Thread t2 = new Thread(new Runnable() {
			
			@Override
			public void run() {
				while(true) {
					if(i<=0) {
						break;
					}
					
  System.out.ppublic class Demo2 extends Frame implements Runnable{

	private int count = 100;
	static Button button = new Button();
	static Demo2 demo2 = new Demo2();
	int r1,r2;
	
	public void random(int i,int j) {
		r1 = (int)(Math.random()*1251);
		r2 = (int)(Math.random()*551);
	}
	
	@Override
	public void run() {
		try {
			while(count>0) {
				count--;
				button.setLabel(count+"");
				Thread.sleep(1000);
				random(0, 0);
				demo2.setLocation(r1,r2);
			}
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
public static void main(String[] args) {
		demo2.setBackground(Color.yellow);
		demo2.setSize(300,300);
		button.setBackground(Color.cyan);
		button.setLabel("60");
		demo2.add(button);
		demo2.setVisible(true);
		Thread thread = new Thread(demo2);
		thread.start();
		
		demo2.addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				super.windowClosing(e);
				System.out.println("正在关闭...");
				System.exit(0);
			}
		});
	}

}rintln(Thread.currentThread()+"第"+(i--));
				}
				
			}
		},"第二位");
		
		
		t2.start();
	}
	
}
